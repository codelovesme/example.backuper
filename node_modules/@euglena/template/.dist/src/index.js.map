{"version":3,"sources":["src/index.ts"],"names":[],"mappings":"AACA,YAAY,CAAC;;;;;;;;;;;;AAEb;;;;;;;;GAQG;AACH,sCAAkG;AAClG,uCAAoC;AAIpC;IAA8C,mCAAmB;IAC7D,yBAAY,IAAY,EAAE,IAAa;eAAI,kBAAM,IAAI,EAAE,IAAI,CAAC;IAAE,CAAC;IACnE,sBAAC;AAAD,CAFA,AAEC,CAF6C,iBAAU,GAEvD;AAFqB,0CAAe;AAGrC;IAA2C,gCAAgB;IACvD,sBAAY,IAAY;eAAI,kBAAM,IAAI,CAAC;IAAE,CAAC;IAC9C,mBAAC;AAAD,CAFA,AAEC,CAF0C,iBAAU,GAEpD;AAFqB,oCAAY;AAGlC,IAAiB,YAAY,CAwD5B;AAxDD,WAAiB,YAAY;IACzB;QAAA;QAEA,CAAC;QAAD,aAAC;IAAD,CAFA,AAEC,IAAA;IAFY,mBAAM,SAElB,CAAA;IAKD;QAAA;QA+CA,CAAC;QA5CiB,2BAAe,GAA7B,UAA8B,aAA0B,EAAE,WAAmB;YACzE,IAAI,QAAQ,GAAG,WAAW,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;YAC3D,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACX,EAAE,CAAC,CAAC,CAAC,eAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;oBAC9D,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC/B,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAC5F,CAAC;QACL,CAAC;QACa,+BAAmB,GAAjC,UAAkC,aAA0B;YACxD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC3D,EAAE,CAAC,CAAC,cAAE,CAAC,KAAK,CAAC,SAAS,CAAC,aAAa,EAAE,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC9E,MAAM,CAAC,eAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACzF,CAAC;YACL,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACa,8BAAkB,GAAhC,UAAiC,aAA0B,EAAE,WAAmB;YAC5E,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC3D,EAAE,CAAC,CAAC,cAAE,CAAC,KAAK,CAAC,SAAS,CAAC,aAAa,EAAE,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC9E,IAAI,KAAK,GAAG,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;oBAC1E,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;wBACb,MAAM,CAAC,eAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;oBAC/G,CAAC;gBACL,CAAC;YACL,CAAC;YACD,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QACa,4BAAgB,GAA9B,UAA+B,aAA0B;YACrD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC3D,EAAE,CAAC,CAAC,cAAE,CAAC,KAAK,CAAC,SAAS,CAAC,aAAa,EAAE,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC9E,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACpD,CAAC;YACL,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACa,wBAAY,GAA1B,UAA2B,aAA0B,EAAE,WAAmB;YACtE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC3D,EAAE,CAAC,CAAC,cAAE,CAAC,KAAK,CAAC,SAAS,CAAC,aAAa,EAAE,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC9E,MAAM,CAAC,eAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;gBACtG,CAAC;YACL,CAAC;QACL,CAAC;QA5Cc,4BAAgB,GAAyB,EAAE,CAAC;QA6C/D,kBAAC;KA/CD,AA+CC,IAAA;IA/CY,wBAAW,cA+CvB,CAAA;AACL,CAAC,EAxDgB,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAwD5B;AACD,IAAiB,KAAK,CAySrB;AAzSD,WAAiB,KAAK;IAElB,IAAiB,SAAS,CAoEzB;IApED,WAAiB,SAAS;QACtB,IAAiB,SAAS,CAwDzB;QAxDD,WAAiB,SAAS;YACT,gBAAM,GAAG,QAAQ,CAAC;YAClB,uBAAa,GAAG,eAAe,CAAC;YAChC,gBAAM,GAAG,QAAQ,CAAC;YAClB,mBAAS,GAAG,WAAW,CAAC;YACxB,qBAAW,GAAG,aAAa,CAAC;YAC5B,uBAAa,GAAG,eAAe,CAAC;YAChC,uBAAa,GAAG,eAAe,CAAC;YAChC,qBAAW,GAAG,aAAa,CAAC;YAC5B,4BAAkB,GAAG,oBAAoB,CAAC;YAC1C,qBAAW,GAAG,aAAa,CAAC;YAC5B,sBAAY,GAAG,cAAc,CAAC;YAC9B,cAAI,GAAG,MAAM,CAAC;YACd,mBAAS,GAAG,WAAW,CAAC;YACxB,gCAAsB,GAAG,wBAAwB,CAAC;YAClD,eAAK,GAAG,OAAO,CAAC;YAChB,iBAAO,GAAG,SAAS,CAAC;YACpB,gBAAM,GAAG,QAAQ,CAAC;YAClB,2BAAiB,GAAG,mBAAmB,CAAC;YACxC,iCAAuB,GAAG,yBAAyB,CAAC;YACpD,cAAI,GAAG,MAAM,CAAC;YACd,qBAAW,GAAG,aAAa,CAAC;YAC5B,gBAAM,GAAG,QAAQ,CAAC;YAClB,4BAAkB,GAAG,oBAAoB,CAAC;YAC1C,iCAAuB,GAAG,yBAAyB,CAAC;YACpD,0BAAgB,GAAG,kBAAkB,CAAC;YACtC,2BAAiB,GAAG,mBAAmB,CAAC;YACxC,wCAA8B,GAAG,gCAAgC,CAAC;YAClE,gCAAsB,GAAG,wBAAwB,CAAC;YAClD,eAAK,GAAG,OAAO,CAAC;YAChB,oBAAU,GAAG,YAAY,CAAC;YAC1B,iBAAO,GAAG,SAAS,CAAC;YACpB,oBAAU,GAAG,YAAY,CAAC;YAC1B,yBAAe,GAAG,iBAAiB,CAAC;YACpC,+BAAqB,GAAG,uBAAuB,CAAC;YAChD,0BAAgB,GAAG,kBAAkB,CAAC;YACtC,yBAAe,GAAG,iBAAiB,CAAC;YACpC,yBAAe,GAAG,iBAAiB,CAAC;YACpC,2BAAiB,GAAG,mBAAmB,CAAC;YACxC,wBAAc,GAAG,gBAAgB,CAAC;YAClC,uBAAa,GAAG,eAAe,CAAC;YAChC,uBAAa,GAAG,eAAe,CAAC;YAChC,mBAAS,GAAG,WAAW,CAAC;YACxB,0BAAgB,GAAG,kBAAkB,CAAC;YACtC,kBAAQ,GAAG,UAAU,CAAC;YACtB,iBAAO,GAAG,SAAS,CAAC;YACpB,qBAAW,GAAG,aAAa,CAAC;YAC5B,2BAAiB,GAAG,mBAAmB,CAAC;YACxC,sBAAY,GAAG,cAAc,CAAC;YAC9B,wBAAc,GAAG,gBAAgB,CAAC;YAClC,6BAAmB,GAAG,qBAAqB,CAAC;YAC5C,sBAAY,GAAG,cAAc,CAAC;YAC9B,wBAAc,GAAG,gBAAgB,CAAC;YAClC,yBAAe,GAAG,iBAAiB,CAAC;YACpC,aAAG,GAAG,KAAK,CAAC;YACZ,kBAAQ,GAAG,UAAU,CAAC;QACvC,CAAC,EAxDgB,SAAS,GAAT,mBAAS,KAAT,mBAAS,QAwDzB;QACD,IAAiB,UAAU,CAS1B;QATD,WAAiB,UAAU;YACV,yBAAc,GAAG,gBAAgB,CAAC;YAClC,uBAAY,GAAG,cAAc,CAAC;YAC9B,uBAAY,GAAG,cAAc,CAAC;YAC9B,wBAAa,GAAG,eAAe,CAAC;YAChC,uBAAY,GAAG,cAAc,CAAC;YAC9B,sBAAW,GAAG,aAAa,CAAC;YAC5B,6BAAkB,GAAG,oBAAoB,CAAC;YAC1C,oBAAS,GAAG,WAAW,CAAC;QACzC,CAAC,EATgB,UAAU,GAAV,oBAAU,KAAV,oBAAU,QAS1B;IACL,CAAC,EApEgB,SAAS,GAAT,eAAS,KAAT,eAAS,QAoEzB;IACD,IAAiB,SAAS,CAuBzB;IAvBD,WAAiB,SAAS;QACtB,IAAO,SAAS,GAAG,YAAU,CAAC,SAAS,CAAC;QACxC;YAA4C,iCAA0C;YAClF;uBAAgB,kBAAM,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,aAAa,CAAC;YAAE,CAAC;YACtE,oBAAC;QAAD,CAFA,AAEC,CAF2C,SAAS,GAEpD;QAFqB,uBAAa,gBAElC,CAAA;QACD;YAA2C,gCAA0C;YACjF;uBAAgB,kBAAM,SAAS,CAAC,UAAU,CAAC,YAAY,CAAC;YAAE,CAAC;YAC/D,mBAAC;QAAD,CAFA,AAEC,CAF0C,SAAS,GAEnD;QAFqB,sBAAY,eAEjC,CAAA;QACD;YAA2C,gCAA0C;YACjF;uBAAgB,kBAAM,SAAS,CAAC,UAAU,CAAC,YAAY,CAAC;YAAE,CAAC;YAC/D,mBAAC;QAAD,CAFA,AAEC,CAF0C,SAAS,GAEnD;QAFqB,sBAAY,eAEjC,CAAA;QACD;YAA6C,kCAA4C;YACrF;uBAAgB,kBAAM,SAAS,CAAC,UAAU,CAAC,cAAc,CAAC;YAAE,CAAC;YACjE,qBAAC;QAAD,CAFA,AAEC,CAF4C,SAAS,GAErD;QAFqB,wBAAc,iBAEnC,CAAA;QACD;YAA0C,+BAAyC;YAC/E;uBAAgB,kBAAM,SAAS,CAAC,UAAU,CAAC,WAAW,CAAC;YAAE,CAAC;YAC9D,kBAAC;QAAD,CAFA,AAEC,CAFyC,SAAS,GAElD;QAFqB,qBAAW,cAEhC,CAAA;QACD;YAAiD,sCAAgD;YAC7F;uBAAgB,kBAAM,SAAS,CAAC,UAAU,CAAC,kBAAkB,CAAC;YAAE,CAAC;YACrE,yBAAC;QAAD,CAFA,AAEC,CAFgD,SAAS,GAEzD;QAFqB,4BAAkB,qBAEvC,CAAA;QACD;YAA2C,gCAA0C;YACjF;uBAAgB,kBAAM,SAAS,CAAC,UAAU,CAAC,YAAY,CAAC;YAAE,CAAC;YAC/D,mBAAC;QAAD,CAFA,AAEC,CAF0C,SAAS,GAEnD;QAFqB,sBAAY,eAEjC,CAAA;IACL,CAAC,EAvBgB,SAAS,GAAT,eAAS,KAAT,eAAS,QAuBzB;IACD,IAAiB,QAAQ,CAyMxB;IAzMD,WAAiB,UAAQ;QACrB;YAA8B,4BAAY;YACtC,kBAAY,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;YAAC,CAAC;YACnF,eAAC;QAAD,CAFA,AAEC,CAF6B,YAAY,GAEzC;QAFY,mBAAQ,WAEpB,CAAA;QAKD;YAAyB,uBAAyB;YAC9C,aAAY,SAAwB,EAAE,EAAU;uBAC5C,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,SAAS,CAAC;YAC7D,CAAC;YACL,UAAC;QAAD,CAJA,AAIC,CAJwB,iBAAU,GAIlC;QAJY,cAAG,MAIf,CAAA;QACD;YAA8B,4BAAkB;YAC5C,kBAAY,WAAmB,EAAE,KAAa;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,WAAW,CAAC,EAAE,KAAK,CAAC;YAAE,CAAC;YAC5H,eAAC;QAAD,CAFA,AAEC,CAF6B,iBAAU,GAEvC;QAFY,mBAAQ,WAEpB,CAAA;QACD;YAAsC,oCAAuC;YACzE,0BAAY,EAAU;uBAClB,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,gBAAgB,EAAE,EAAE,CAAC,EAAE,IAAI,eAAG,CAAC,IAAI,CAAC,GAAG,CAAgB,UAAC,IAAI,EAAE,IAAI;oBACnG,MAAM,CAAC,cAAE,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC1C,CAAC,CAAC,CAAC;YACP,CAAC;YACL,uBAAC;QAAD,CANA,AAMC,CANqC,iBAAU,GAM/C;QANY,2BAAgB,mBAM5B,CAAA;QACD;YAA+B,6BAAuB;YAClD,mBAAY,iBAA8B,EAAE,EAAU;uBAClD,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,EAAE,EAAE,CAAC,EAAE,iBAAiB,CAAC;YAC3E,CAAC;YACL,gBAAC;QAAD,CAJA,AAIC,CAJ8B,iBAAU,GAIxC;QAJY,oBAAS,YAIrB,CAAA;QACD;YAAgC,8BAAwC;YACpE,oBAAY,GAAW,EAAE,GAAW,EAAE,EAAU;uBAC5C,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,KAAA,EAAE,GAAG,KAAA,EAAE,CAAC;YACvE,CAAC;YACL,iBAAC;QAAD,CAJA,AAIC,CAJ+B,iBAAU,GAIzC;QAJY,qBAAU,aAItB,CAAA;QACD;YAA4B,0BAAgB;YACxC,gBAAY,EAAU;uBAClB,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YACrD,CAAC;YACL,aAAC;QAAD,CAJA,AAIC,CAJ2B,iBAAU,GAIrC;QAJY,iBAAM,SAIlB,CAAA;QAOD;YAA2C,yCAAwC;YAC/E,+BAAY,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,qBAAqB,EAAE,EAAE,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;YAAE,CAAC;YACtH,4BAAC;QAAD,CAFA,AAEC,CAF0C,iBAAU,GAEpD;QAFY,gCAAqB,wBAEjC,CAAA;QACD;YAAuC,qCAAoC;YACvE,2BAAY,OAAiC,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,iBAAiB,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC;YAAE,CAAC;YACzI,wBAAC;QAAD,CAFA,AAEC,CAFsC,iBAAU,GAEhD;QAFY,4BAAiB,oBAE7B,CAAA;QAMD;YAAqC,mCAAkC;YACnE,yBAAY,OAA+B,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC;YAAE,CAAC;YACrI,sBAAC;QAAD,CAFA,AAEC,CAFoC,iBAAU,GAE9C;QAFY,0BAAe,kBAE3B,CAAA;QAKD;YAAqC,mCAAkC;YACnE,yBAAY,OAA+B,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC;YAAE,CAAC;YACrI,sBAAC;QAAD,CAFA,AAEC,CAFoC,iBAAU,GAE9C;QAFY,0BAAe,kBAE3B,CAAA;QAKD;YAAqC,mCAAkC;YACnE,yBAAY,OAA+B,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC;YAAE,CAAC;YACrI,sBAAC;QAAD,CAFA,AAEC,CAFoC,iBAAU,GAE9C;QAFY,0BAAe,kBAE3B,CAAA;QAOD;YAAoC,kCAAiC;YACjE,wBAAY,OAA8B,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,cAAc,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC;YAAE,CAAC;YACnI,qBAAC;QAAD,CAFA,AAEC,CAFmC,iBAAU,GAE7C;QAFY,yBAAc,iBAE1B,CAAA;QACD;YAAsC,oCAAmC;YACrE,0BAAY,OAAgC,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,gBAAgB,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC;YAAE,CAAC;YACvI,uBAAC;QAAD,CAFA,AAEC,CAFqC,iBAAU,GAE/C;QAFY,2BAAgB,mBAE5B,CAAA;QACD;YAAgC,8BAAY;YACxC,oBAAY,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;YAAE,CAAC;YACtF,iBAAC;QAAD,CAFA,AAEC,CAF+B,YAAY,GAE3C;QAFY,qBAAU,aAEtB,CAAA;QACD;YAAmC,iCAA4B;YAC3D,uBAAY,IAAY,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,MAAA,EAAE,CAAC;YAAE,CAAC;YACjH,oBAAC;QAAD,CAFA,AAEC,CAFkC,iBAAU,GAE5C;QAFY,wBAAa,gBAEzB,CAAA;QACD;YAAuC,qCAAY;YAC/C,2BAAY,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;YAAE,CAAC;YAC7F,wBAAC;QAAD,CAFA,AAEC,CAFsC,YAAY,GAElD;QAFY,4BAAiB,oBAE7B,CAAA;QACD;YAAoD,kDAAY;YAC5D,wCAAY,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,8BAA8B,EAAE,EAAE,CAAC,CAAC;YAAE,CAAC;YAC1G,qCAAC;QAAD,CAFA,AAEC,CAFmD,YAAY,GAE/D;QAFY,yCAA8B,iCAE1C,CAAA;QACD;YAA4C,0CAAqC;YAC7E,gCAAY,aAAqB,EAAE,EAAU;uBACzC,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,sBAAsB,EAAE,EAAE,CAAC,EAAE,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC;YACvG,CAAC;YACL,6BAAC;QAAD,CAJA,AAIC,CAJ2C,iBAAU,GAIrD;QAJY,iCAAsB,yBAIlC,CAAA;QACD;YAA4B,0BAAkB;YAC1C,gBAAY,MAAc,EAAE,EAAU;uBAClC,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC;YAC7D,CAAC;YACL,aAAC;QAAD,CAJA,AAIC,CAJ2B,iBAAU,GAIrC;QAJY,iBAAM,SAIlB,CAAA;QACD;YAAkC,gCAAqD;YACnF,sBAAY,WAAmB,EAAE,QAAgB,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;YAAE,CAAC;YACjL,mBAAC;QAAD,CAFA,AAEC,CAFiC,iBAAU,GAE3C;QAFY,uBAAY,eAExB,CAAA;QACD;YAA2B,yBAAwC;YAC/D,eAAY,IAAY,EAAE,EAAU,EAAE,UAAkB,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE,EAAE,UAAU,CAAC,EAAE,EAAE,IAAI,MAAA,EAAE,EAAE,IAAA,EAAE,CAAC;YAAE,CAAC;YACzJ,YAAC;QAAD,CAFA,AAEC,CAF0B,iBAAU,GAEpC;QAFY,gBAAK,QAEjB,CAAA;QACD;YAA6B,2BAAyB;YAClD,iBAAY,IAAmB,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC;YAAE,CAAC;YAC9G,cAAC;QAAD,CAFA,AAEC,CAF4B,iBAAU,GAEtC;QAFY,kBAAO,UAEnB,CAAA;QACD;YAAsC,oCAAsC;YACxE,0BAAY,WAAuC,EAAE,EAAU;uBAC3D,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,gBAAgB,EAAE,EAAE,CAAC,EAAE,WAAW,CAAC;YAC5E,CAAC;YACL,uBAAC;QAAD,CAJA,AAIC,CAJqC,iBAAU,GAI/C;QAJY,2BAAgB,mBAI5B,CAAA;QACD;YAAwC,sCAAsC;YAC1E,4BAAY,WAAuC,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,kBAAkB,EAAE,EAAE,CAAC,EAAE,WAAW,CAAC;YAAE,CAAC;YACpJ,yBAAC;QAAD,CAFA,AAEC,CAFuC,iBAAU,GAEjD;QAFY,6BAAkB,qBAE9B,CAAA;QACD;YAA6C,2CAAsC;YAC/E,iCAAY,WAAuC,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,kBAAkB,EAAE,EAAE,CAAC,EAAE,WAAW,CAAC;YAAE,CAAC;YACpJ,8BAAC;QAAD,CAFA,AAEC,CAF4C,iBAAU,GAEtD;QAFY,kCAAuB,0BAEnC,CAAA;QACD;YAA4B,0BAAY;YACpC,gBAAY,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YAAE,CAAC;YAClF,aAAC;QAAD,CAFA,AAEC,CAF2B,YAAY,GAEvC;QAFY,iBAAM,SAElB,CAAA;QAKD;YAAiC,+BAA8D;YAC3F,qBAAY,OAA2D,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC;YAAE,CAAC;YAC7J,kBAAC;QAAD,CAFA,AAEC,CAFgC,iBAAU,GAE1C;QAFY,sBAAW,cAEvB,CAAA;QACD;YAA4B,0BAAoD;YAC5E,gBAAY,QAAqB,EAAE,KAAa,EAAE,EAAU;uBACxD,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,EAAE,QAAQ,UAAA,EAAE,KAAK,OAAA,EAAE,CAAC;YAC1E,CAAC;YACL,aAAC;QAAD,CAJA,AAIC,CAJ2B,iBAAU,GAIrC;QAJY,iBAAM,SAIlB,CAAA;QACD;YAAiC,+BAAuD;YACpF,qBAAY,OAAoD,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC;YAAE,CAAC;YACtJ,kBAAC;QAAD,CAFA,AAEC,CAFgC,iBAAU,GAE1C;QAFY,sBAAW,cAEvB,CAAA;QACD,IAAY,yBAEX;QAFD,WAAY,yBAAyB;YACjC,6FAAc,CAAA;YAAE,uFAAW,CAAA;YAAE,uEAAG,CAAA;QACpC,CAAC,EAFW,yBAAyB,GAAzB,oCAAyB,KAAzB,oCAAyB,QAEpC;QACD;YAAwC,iCAAmG;YACvI,uBAAY,aAAqB,EAAE,YAAuC,EAAE,YAAoB,EAAE,GAAQ,EAAE,EAAU;uBAClH,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,YAAY,EAAE,EAAE,GAAG,KAAA,EAAE,CAAC;YAChJ,CAAC;YACL,oBAAC;QAAD,CAJA,AAIC,CAJuC,iBAAU,GAIjD;QAJY,wBAAa,gBAIzB,CAAA;QACD;YAAmC,iCAA8E;YAC7G,uBAAY,OAA2E,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC;YAAE,CAAC;YAC7K,oBAAC;QAAD,CAFA,AAEC,CAFkC,iBAAU,GAE5C;QAFY,wBAAa,gBAEzB,CAAA;QACD;YAAmC,iCAAyB;YACxD,uBAAY,OAAsB,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC;YAAE,CAAC;YAC1H,oBAAC;QAAD,CAFA,AAEC,CAFkC,iBAAU,GAE5C;QAFY,wBAAa,gBAEzB,CAAA;QACD;YAA+B,6BAA8B;YACzD,mBAAY,OAA2B,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC;YAAE,CAAC;YAC3H,gBAAC;QAAD,CAFA,AAEC,CAF8B,iBAAU,GAExC;QAFY,oBAAS,YAErB,CAAA;QACD;YAA0B,wBAAyB;YAC/C,cAAY,OAAsB,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC;YAAE,CAAC;YACjH,WAAC;QAAD,CAFA,AAEC,CAFyB,iBAAU,GAEnC;QAFY,eAAI,OAEhB,CAAA;QACD;YAAiC,+BAAY;YACzC,qBAAY,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;YAAE,CAAC;YACvF,kBAAC;QAAD,CAFA,AAEC,CAFgC,YAAY,GAE5C;QAFY,sBAAW,cAEvB,CAAA;QACD;YAA4C,0CAAe;YACvD,gCAAY,OAAgB,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,sBAAsB,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC;YAAE,CAAC;YAC7H,6BAAC;QAAD,CAFA,AAEC,CAF2C,eAAe,GAE1D;QAFY,iCAAsB,yBAElC,CAAA;QACD;YAAwC,sCAAe;YACnD,4BAAY,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,kBAAkB,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC;YAAE,CAAC;YACpG,yBAAC;QAAD,CAFA,AAEC,CAFuC,eAAe,GAEtD;QAFY,6BAAkB,qBAE9B,CAAA;QACD;YAAoC,kCAA4C;YAC5E,wBAAY,OAAe,EAAE,KAAU,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,cAAc,EAAE,EAAE,CAAC,EAAE,EAAE,OAAO,SAAA,EAAE,KAAK,OAAA,EAAE,CAAC;YAAE,CAAC;YAC3I,qBAAC;QAAD,CAFA,AAEC,CAFmC,iBAAU,GAE7C;QAFY,yBAAc,iBAE1B,CAAA;QACD;YAAkC,gCAAkD;YAChF,sBAAY,QAAqB,EAAE,EAAU,EAAE,KAAW;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE,EAAE,QAAQ,UAAA,EAAE,KAAK,OAAA,EAAE,CAAC;YAAE,CAAC;YACjJ,mBAAC;QAAD,CAFA,AAEC,CAFiC,iBAAU,GAE3C;QAFY,uBAAY,eAExB,CAAA;QACD;YAAkC,gCAAe;YAC7C,sBAAY,KAAU,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC;YAAE,CAAC;YAC3G,mBAAC;QAAD,CAFA,AAEC,CAFiC,iBAAU,GAE3C;QAFY,uBAAY,eAExB,CAAA;QACD;YAAmC,iCAAe;YAC9C,uBAAY,KAAU,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC;YAAE,CAAC;YAC5G,oBAAC;QAAD,CAFA,AAEC,CAFkC,iBAAU,GAE5C;QAFY,wBAAa,gBAEzB,CAAA;QACD;YAA+B,6BAAyB;YACpD,mBAAY,SAAwB,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,EAAE,EAAE,CAAC,EAAE,SAAS,CAAC;YAAE,CAAC;YAC1H,gBAAC;QAAD,CAFA,AAEC,CAF8B,iBAAU,GAExC;QAFY,oBAAS,YAErB,CAAA;QACD;YAAoC,kCAAe;YAC/C,wBAAY,KAAU,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,cAAc,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC;YAAE,CAAC;YAC7G,qBAAC;QAAD,CAFA,AAEC,CAFmC,iBAAU,GAE7C;QAFY,yBAAc,iBAE1B,CAAA;QACD;YAAqC,mCAAe;YAChD,yBAAY,KAAU,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC;YAAE,CAAC;YAC9G,sBAAC;QAAD,CAFA,AAEC,CAFoC,iBAAU,GAE9C;QAFY,0BAAe,kBAE3B,CAAA;QAKD;YAAuC,qCAAoC;YACvE,2BAAY,OAAiC,EAAE,EAAU;uBAAI,kBAAM,IAAI,aAAM,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,iBAAiB,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC;YAAE,CAAC;YAC/I,wBAAC;QAAD,CAFA,AAEC,CAFsC,iBAAU,GAEhD;QAFY,4BAAiB,oBAE7B,CAAA;IACL,CAAC,EAzMgB,QAAQ,GAAR,cAAQ,KAAR,cAAQ,QAyMxB;AACL,CAAC,EAzSgB,KAAK,GAAL,aAAK,KAAL,aAAK,QAySrB","file":"src/index.js","sourcesContent":["\n\"use strict\";\n\n/**\n * Created by codelovesme on 6/19/2015.\n * \n * \n * TODO list\n * * ReadParticle, ReamoveParticle must take query:any instead of AnyParticle\n *      SaveParticle must be the same with the Cytoplasm saveParticle\n * \n */\nimport { interaction, ParticleV2, MetaV2, AnyParticle, alive as core_alive } from \"@euglena/core\";\nimport { sys, js } from \"cessnalib\";\nimport Exception = sys.type.Exception;\nimport Impact = interaction.Impact;\n\nexport abstract class BooleanParticle extends ParticleV2<Boolean> {\n    constructor(meta: MetaV2, data: Boolean) { super(meta, data); }\n}\nexport abstract class VoidParticle extends ParticleV2<void> {\n    constructor(meta: MetaV2) { super(meta); }\n}\nexport namespace subscription {\n    export class Record {\n\n    }\n    export interface SubscriptionRecord {\n        particle: AnyParticle;\n        euglenas: string[]\n    }\n    export class StaticTools {\n\n        private static subscriptionDict: SubscriptionRecord[] = [];\n        public static addSubscription(particleMatch: AnyParticle, euglenaName: string): void {\n            let euglenas = StaticTools.getSubscriptions(particleMatch);\n            if (euglenas) {\n                if (!sys.type.StaticTools.Array.contains(euglenas, euglenaName)) {\n                    euglenas.push(euglenaName);\n                }\n            } else {\n                StaticTools.subscriptionDict.push({ particle: particleMatch, euglenas: [euglenaName] });\n            }\n        }\n        public static removeSubscriptions(particleMatch: AnyParticle): string[] {\n            for (let i = 0; i < StaticTools.subscriptionDict.length; i++) {\n                if (js.Class.doesCover(particleMatch, StaticTools.subscriptionDict[i].particle)) {\n                    return sys.type.StaticTools.Array.removeAt(StaticTools.subscriptionDict, i).euglenas;\n                }\n            }\n            return null;\n        }\n        public static removeSubscription(particleMatch: AnyParticle, euglenaName: string): boolean {\n            for (let i = 0; i < StaticTools.subscriptionDict.length; i++) {\n                if (js.Class.doesCover(particleMatch, StaticTools.subscriptionDict[i].particle)) {\n                    let index = StaticTools.subscriptionDict[i].euglenas.indexOf(euglenaName);\n                    if (index >= 0) {\n                        return sys.type.StaticTools.Array.removeAt(StaticTools.subscriptionDict[i].euglenas, index) ? true : false;\n                    }\n                }\n            }\n            return false;\n        }\n        public static getSubscriptions(particleMatch: AnyParticle): string[] {\n            for (let i = 0; i < StaticTools.subscriptionDict.length; i++) {\n                if (js.Class.doesCover(particleMatch, StaticTools.subscriptionDict[i].particle)) {\n                    return StaticTools.subscriptionDict[i].euglenas;\n                }\n            }\n            return null;\n        }\n        public static isSubscribed(particleMatch: AnyParticle, euglenaName: string): boolean {\n            for (let i = 0; i < StaticTools.subscriptionDict.length; i++) {\n                if (js.Class.doesCover(particleMatch, StaticTools.subscriptionDict[i].particle)) {\n                    return sys.type.StaticTools.Array.contains(StaticTools.subscriptionDict[i].euglenas, euglenaName);\n                }\n            }\n        }\n    }\n}\nexport namespace alive {\n    import Cytoplasm = core_alive.Cytoplasm;\n    export namespace constants {\n        export namespace particles {\n            export const Domain = \"Domain\";\n            export const ServerRunning = \"ServerRunning\";\n            export const WhoAmI = \"WhoAmI\";\n            export const Particles = \"Particles\";\n            export const EuglenaInfo = \"EuglenaInfo\";\n            export const OrganelleInfo = \"OrganelleInfo\";\n            export const OrganelleList = \"OrganelleList\";\n            export const EuglenaName = \"EuglenaName\";\n            export const EuglenaHasBeenBorn = \"EuglenaHasBeenBorn\";\n            export const Acknowledge = \"Acknowledge\";\n            export const Authenticate = \"Authenticate\";\n            export const Time = \"Time\";\n            export const Exception = \"Exception\";\n            export const ConnectedToTheInternet = \"ConnectedToTheInternet\";\n            export const Token = \"Token\";\n            export const Impacts = \"Impacts\";\n            export const Impact = \"Impact\";\n            export const DoesParticleExist = \"DoesParticleExist\";\n            export const DoesUniqueParticleExist = \"DoesUniqueParticleExist\";\n            export const Gene = \"Gene\";\n            export const ThrowImpact = \"ThrowImpact\";\n            export const Listen = \"Listen\";\n            export const ConnectedToEuglena = \"ConnectedToEuglena\";\n            export const DisconnectedFromEuglena = \"DisconnectedFromEuglena\";\n            export const ConnectToEuglena = \"ConnectToEuglena\";\n            export const ReturnCurrentTime = \"ReturnCurrentTime\";\n            export const ReturnIfConnectedToTheInternet = \"ReturnIfConnectedToTheInternet\";\n            export const OrganelleHasComeToLife = \"OrganelleHasComeToLife\";\n            export const Proxy = \"Proxy\";\n            export const Coordinate = \"Coordinate\";\n            export const SetTime = \"SetTime\";\n            export const DbIsOnline = \"DbIsOnline\";\n            export const NetOrganelleSap = \"NetOrganelleSap\";\n            export const NetClientOrganelleSap = \"NetClientOrganelleSap\";\n            export const TimeOrganelleSap = \"TimeOrganelleSap\";\n            export const WebOrganelleSap = \"WebOrganelleSap\";\n            export const GPSOrganelleSap = \"GPSOrganelleSap\";\n            export const WebUIOrganelleSap = \"WebUIOrganelleSap\";\n            export const DbOrganelleSap = \"DbOrganelleSap\";\n            export const CytoplasmInfo = \"CytoplasmInfo\";\n            export const ReadParticles = \"ReadParticles\";\n            export const Subscribe = \"Subscribe\";\n            export const subscriptionDict = \"subscriptionDict\";\n            export const Password = \"Password\";\n            export const AddGene = \"AddGene\";\n            export const TimeChanged = \"TimeChanged\";\n            export const ExceptionOccurred = \"ExceptionOccurred\";\n            export const SaveParticle = \"SaveParticle\";\n            export const RenameParticle = \"RenameParticle\";\n            export const SaveMatchedParticle = \"SaveMatchedParticle\";\n            export const ReadParticle = \"ReadParticle\";\n            export const RemoveParticle = \"RemoveParticle\";\n            export const RemoveParticles = \"RemoveParticles\";\n            export const Api = \"Api\";\n            export const IAmReady = \"IAmReady\";\n        }\n        export namespace organelles {\n            export const WebUIOrganelle = \"WebUIOrganelle\";\n            export const GPSOrganelle = \"GPSOrganelle\";\n            export const NetOrganelle = \"NetOrganelle\";\n            export const TimeOrganelle = \"TimeOrganelle\";\n            export const WebOrganelle = \"WebOrganelle\";\n            export const DbOrganelle = \"DbOrganelle\";\n            export const NetClientOrganelle = \"NetClientOrganelle\";\n            export const Cytoplasm = \"Cytoplasm\";\n        }\n    }\n    export namespace organelle {\n        import Organelle = core_alive.Organelle;\n        export abstract class TimeOrganelle extends Organelle<core_alive.particles.SapContent> {\n            constructor() { super(alive.constants.organelles.TimeOrganelle); }\n        }\n        export abstract class NetOrganelle extends Organelle<particle.NetOrganelleSapContent> {\n            constructor() { super(constants.organelles.NetOrganelle); }\n        }\n        export abstract class WebOrganelle extends Organelle<particle.WebOrganelleSapContent>{\n            constructor() { super(constants.organelles.WebOrganelle); }\n        }\n        export abstract class WebUIOrganelle extends Organelle<particle.WebUIOrganelleSapContent>{\n            constructor() { super(constants.organelles.WebUIOrganelle); }\n        }\n        export abstract class DbOrganelle extends Organelle<particle.DbOrganelleSapContent>{\n            constructor() { super(constants.organelles.DbOrganelle); }\n        }\n        export abstract class NetClientOrganelle extends Organelle<particle.NetClientOrganelleSapContent>{\n            constructor() { super(constants.organelles.NetClientOrganelle); }\n        }\n        export abstract class GPSOrganelle extends Organelle<particle.GPSOrganelleSapContent>{\n            constructor() { super(constants.organelles.GPSOrganelle); }\n        }\n    }\n    export namespace particle {\n        export class IamReady extends VoidParticle {\n            constructor(of: string) { super(new MetaV2(constants.particles.IAmReady, of)) }\n        }\n        export interface MatchedParticlesContent {\n            particleRef: AnyParticle;\n            result: AnyParticle[];\n        }\n        export class Api extends ParticleV2<AnyParticle[]> {\n            constructor(particles: AnyParticle[], of: string) {\n                super(new MetaV2(constants.particles.Api, of), particles);\n            }\n        }\n        export class Password extends ParticleV2<string> {\n            constructor(euglenaName: string, value: string) { super(new MetaV2(constants.particles.Password, euglenaName), value); }\n        }\n        export class subscriptionDict extends ParticleV2<sys.type.Map<any, string[]>> {\n            constructor(of: string) {\n                super(new MetaV2(constants.particles.subscriptionDict, of), new sys.type.Map<any, string[]>((key1, key2) => {\n                    return js.Class.doesCover(key1, key2);\n                }));\n            }\n        }\n        export class Subscribe extends ParticleV2<AnyParticle> {\n            constructor(particleReference: AnyParticle, of: string) {\n                super(new MetaV2(constants.particles.Subscribe, of), particleReference);\n            }\n        }\n        export class Coordinate extends ParticleV2<{ lat: number, lon: number }> {\n            constructor(lat: number, lon: number, of: string) {\n                super(new MetaV2(constants.particles.Coordinate, of), { lat, lon });\n            }\n        }\n        export class WhoAmI extends ParticleV2<void> {\n            constructor(of: string) {\n                super(new MetaV2(constants.particles.WhoAmI, of));\n            }\n        }\n        export interface WebUIOrganelleSapContent {\n            euglenaName: string\n        }\n        export interface NetClientOrganelleSapContent {\n            euglenaName: string;\n        }\n        export class NetClientOrganelleSap extends ParticleV2<NetClientOrganelleSapContent> {\n            constructor(of: string) { super(new MetaV2(constants.particles.NetClientOrganelleSap, of), { euglenaName: of }); }\n        }\n        export class WebUIOrganelleSap extends ParticleV2<WebUIOrganelleSapContent> {\n            constructor(content: WebUIOrganelleSapContent, of: string) { super(new MetaV2(constants.particles.WebUIOrganelleSap, of), content); }\n        }\n        export interface WebOrganelleSapContent {\n            euglenaName: string,\n            euglenaInfo: particle.EuglenaInfo,\n            singlePageApp: boolean\n        }\n        export class WebOrganelleSap extends ParticleV2<WebOrganelleSapContent> {\n            constructor(content: WebOrganelleSapContent, of: string) { super(new MetaV2(constants.particles.WebOrganelleSap, of), content); }\n        }\n        export interface GPSOrganelleSapContent {\n            euglenaName: string,\n            port: string\n        }\n        export class GPSOrganelleSap extends ParticleV2<GPSOrganelleSapContent> {\n            constructor(content: GPSOrganelleSapContent, of: string) { super(new MetaV2(constants.particles.GPSOrganelleSap, of), content); }\n        }\n        export interface NetOrganelleSapContent {\n            euglenaName: string,\n            euglenaInfo: particle.EuglenaInfo\n        }\n        export class NetOrganelleSap extends ParticleV2<NetOrganelleSapContent> {\n            constructor(content: NetOrganelleSapContent, of: string) { super(new MetaV2(constants.particles.NetOrganelleSap, of), content); }\n        }\n        export interface DbOrganelleSapContent {\n            euglenaName: string,\n            url: string,\n            port: number,\n            databaseName: string\n        }\n        export class DbOrganelleSap extends ParticleV2<DbOrganelleSapContent> {\n            constructor(content: DbOrganelleSapContent, of: string) { super(new MetaV2(constants.particles.DbOrganelleSap, of), content); }\n        }\n        export class TimeOrganelleSap extends ParticleV2<{ euglenaName: string }>{\n            constructor(content: { euglenaName: string }, of: string) { super(new MetaV2(constants.particles.TimeOrganelleSap, of), content); }\n        }\n        export class DbIsOnline extends VoidParticle {\n            constructor(of: string) { super(new MetaV2(constants.particles.DbIsOnline, of)); }\n        }\n        export class ServerRunning extends ParticleV2<{ port: string }> {\n            constructor(port: string, of: string) { super(new MetaV2(constants.particles.ServerRunning, of), { port }); }\n        }\n        export class ReturnCurrentTime extends VoidParticle {\n            constructor(of: string) { super(new MetaV2(constants.particles.ReturnCurrentTime, of)); }\n        }\n        export class ReturnIfConnectedToTheInternet extends VoidParticle {\n            constructor(of: string) { super(new MetaV2(constants.particles.ReturnIfConnectedToTheInternet, of)); }\n        }\n        export class OrganelleHasComeToLife extends ParticleV2<{ organelleName: string }> {\n            constructor(organelleName: string, of: string) {\n                super(new MetaV2(constants.particles.OrganelleHasComeToLife, of), { organelleName: organelleName });\n            }\n        }\n        export class Domain extends ParticleV2<string> {\n            constructor(domain: string, of: string) {\n                super(new MetaV2(constants.particles.Domain, of), domain);\n            }\n        }\n        export class Authenticate extends ParticleV2<{ euglenaName: string, password: string }> {\n            constructor(euglenaName: string, password: string, of: string) { super(new MetaV2(constants.particles.Authenticate, of), { euglenaName: euglenaName, password: password }); }\n        }\n        export class Proxy extends ParticleV2<{ from: string, to: string }> {\n            constructor(from: string, to: string, expireTime: number, of: string) { super(new MetaV2(constants.particles.Proxy, of, expireTime), { from, to }); }\n        }\n        export class SetTime extends ParticleV2<sys.type.Time> {\n            constructor(time: sys.type.Time, of: string) { super(new MetaV2(constants.particles.SetTime, of), time); }\n        }\n        export class ConnectToEuglena extends ParticleV2<alive.particle.EuglenaInfo> {\n            constructor(euglenaInfo: alive.particle.EuglenaInfo, of: string) {\n                super(new MetaV2(constants.particles.ConnectToEuglena, of), euglenaInfo);\n            }\n        }\n        export class ConnectedToEuglena extends ParticleV2<alive.particle.EuglenaInfo> {\n            constructor(euglenaInfo: alive.particle.EuglenaInfo, of: string) { super(new MetaV2(constants.particles.ConnectedToEuglena, of), euglenaInfo); }\n        }\n        export class DisconnectedFromEuglena extends ParticleV2<alive.particle.EuglenaInfo> {\n            constructor(euglenaInfo: alive.particle.EuglenaInfo, of: string) { super(new MetaV2(constants.particles.ConnectedToEuglena, of), euglenaInfo); }\n        }\n        export class Listen extends VoidParticle {\n            constructor(of: string) { super(new MetaV2(constants.particles.Listen, of)); }\n        }\n        export interface ThrowImpactContent {\n            to: alive.particle.EuglenaInfo,\n            impact: Impact\n        }\n        export class ThrowImpact extends ParticleV2<{ to: alive.particle.EuglenaInfo, impact: Impact }> {\n            constructor(content: { to: alive.particle.EuglenaInfo, impact: Impact }, of: string) { super(new MetaV2(constants.particles.ThrowImpact, of), content); }\n        }\n        export class Impact extends ParticleV2<{ token: string, particle: AnyParticle }> {\n            constructor(particle: AnyParticle, token: string, of: string) {\n                super(new MetaV2(constants.particles.Impact, of), { particle, token });\n            }\n        }\n        export class EuglenaInfo extends ParticleV2<{ name: string, url: string, port: string }> {\n            constructor(content: { name: string, url: string, port: string }, of: string) { super(new MetaV2(constants.particles.EuglenaInfo, of), content); }\n        }\n        export enum OrganelleInfoLocationType {\n            FileSystemPath, NodeModules, Url\n        }\n        export class OrganelleInfo<SAP> extends ParticleV2<{ name: string, location: { type: OrganelleInfoLocationType, path: string }, sap: SAP }>{\n            constructor(organelleName: string, locationType: OrganelleInfoLocationType, locationPath: string, sap: SAP, of: string) {\n                super(new MetaV2(constants.particles.OrganelleInfo, of), { name: organelleName, location: { type: locationType, path: locationPath }, sap });\n            }\n        }\n        export class CytoplasmInfo extends ParticleV2<{ particles: AnyParticle[], chromosome: core_alive.dna.AnyGene[] }> {\n            constructor(content: { particles: AnyParticle[], chromosome: core_alive.dna.AnyGene[] }, of: string) { super(new MetaV2(constants.particles.EuglenaInfo, of), content); }\n        }\n        export class OrganelleList extends ParticleV2<Array<string>> {\n            constructor(content: Array<string>, of: string) { super(new MetaV2(constants.particles.OrganelleList, of), content); }\n        }\n        export class Exception extends ParticleV2<sys.type.Exception> {\n            constructor(content: sys.type.Exception, of: string) { super(new MetaV2(constants.particles.Exception, of), content); }\n        }\n        export class Time extends ParticleV2<sys.type.Time> {\n            constructor(content: sys.type.Time, of: string) { super(new MetaV2(constants.particles.Time, of), content); }\n        }\n        export class Acknowledge extends VoidParticle {\n            constructor(of: string) { super(new MetaV2(constants.particles.Acknowledge, of)); }\n        }\n        export class ConnectedToTheInternet extends BooleanParticle {\n            constructor(content: boolean, of: string) { super(new MetaV2(constants.particles.ConnectedToTheInternet, of), content); }\n        }\n        export class EuglenaHasBeenBorn extends BooleanParticle {\n            constructor(of: string) { super(new MetaV2(constants.particles.EuglenaHasBeenBorn, of), true); }\n        }\n        export class RenameParticle extends ParticleV2<{ newName: string, query?: any }> {\n            constructor(newName: string, query: any, of: string) { super(new MetaV2(constants.particles.RenameParticle, of), { newName, query }); }\n        }\n        export class SaveParticle extends ParticleV2<{ particle: AnyParticle, query?: any }> {\n            constructor(particle: AnyParticle, of: string, query?: any) { super(new MetaV2(constants.particles.SaveParticle, of), { particle, query }); }\n        }\n        export class ReadParticle extends ParticleV2<any> {\n            constructor(query: any, of: string) { super(new MetaV2(constants.particles.ReadParticle, of), query); }\n        }\n        export class ReadParticles extends ParticleV2<any> {\n            constructor(query: any, of: string) { super(new MetaV2(constants.particles.ReadParticles, of), query); }\n        }\n        export class Particles extends ParticleV2<AnyParticle[]> {\n            constructor(particles: AnyParticle[], of: string) { super(new MetaV2(constants.particles.Particles, of), particles); }\n        }\n        export class RemoveParticle extends ParticleV2<any> {\n            constructor(query: any, of: string) { super(new MetaV2(constants.particles.RemoveParticle, of), query); }\n        }\n        export class RemoveParticles extends ParticleV2<any> {\n            constructor(query: any, of: string) { super(new MetaV2(constants.particles.RemoveParticles, of), query); }\n        }\n        export interface DoesParticleExistContent {\n            name: string,\n            of: string\n        }\n        export class DoesParticleExist extends ParticleV2<DoesParticleExistContent> {\n            constructor(content: DoesParticleExistContent, of: string) { super(new MetaV2(alive.constants.particles.DoesParticleExist, of), content); }\n        }\n    }\n}\n\n\n"],"sourceRoot":"/source/"}